<ResourceDictionary 
	x:Class="Assets"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:assets="clr-namespace:WpfExecutor.Assets">
	<Color x:Key="SmilePink">DeepPink</Color>
	<assets:VisibilityConverter x:Key="VisibilityConverter" />

	<Style x:Key="GlassButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="ButtonBorder" Height="40" Width="120" CornerRadius="15" BorderThickness="2" 
								Background="DeepPink" BorderBrush="#99FFFFFF" RenderTransformOrigin="0.5,0.5">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="1*"/>
								<RowDefinition Height="1*"/>
							</Grid.RowDefinitions>
							<Border Grid.Row="0" CornerRadius="15">
								<Border.Background>
									<LinearGradientBrush >
										<GradientStop Color="#08FFFFFF" Offset="0"/>
										<GradientStop Color="#88FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<ContentPresenter Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="ButtonBorder">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DefaultDataGrid" TargetType="DataGrid">
		<Setter Property="Background" Value="Gray" />
		<Setter Property="FontFamily" Value="Tahoma" />
		<Setter Property="Padding" Value="8,4" />
		<Setter Property="Margin" Value="4" />
	</Style>
	<Style TargetType="{x:Type DataGridColumnHeader}"  >
		<Setter Property="Background" Value="Gray" />
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontFamily" Value="Arial" />
		<Setter Property="Margin" Value="4,0,4,0" />
	</Style>

	<DataTemplate x:Key="TransactionItemsDataGrid">
		<DataGrid Style="{StaticResource DefaultDataGrid}" AutoGenerateColumns="False" >
			<DataGrid.Columns>
				<DataGridTemplateColumn Header="Amount" Width="*" IsReadOnly="False">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock  Text="{Binding Path=Amount}" HorizontalAlignment="Right" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<TextBox Text="{Binding Path=Amount}" HorizontalAlignment="Right" IsReadOnly="False"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="DatePosted" Width="*" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=DatePosted}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="FitId" Width="*" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=FitId}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="Memo" Width="*" IsReadOnly="False">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Memo}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
					<DataGridTemplateColumn.CellEditingTemplate>
						<DataTemplate>
							<TextBox Text="{Binding Path=Memo}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellEditingTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="Name" Width="*" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Name}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="Running Balance" Width="*" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=RunningBalance}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="TrnType" Width="*" IsReadOnly="True">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=TrnType}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>
	</DataTemplate>

	<Style x:Key="SmileRoundedBorder" TargetType="Border">
		<Setter Property="BorderBrush">
			<Setter.Value>
				<SolidColorBrush Color="{StaticResource SmilePink}"/>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="10"/>
		<Setter Property="CornerRadius" Value="15"/>
		<Setter Property="Margin" Value="10"/>
	</Style>

	<Style TargetType="TextBox">
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="40"/>
		<!--<Setter Property="Width" Value="Stretch"/>-->
		<Setter Property="Margin" Value="10,10,10,10"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="IsReadOnly" Value="False"></Setter>
		<Setter Property="TextWrapping" Value="WrapWithOverflow" />
	</Style>

	<Style TargetType="Button">
		<Setter Property="Height" Value="32"/>
		<Setter Property="Width" Value="110"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="10,10,10,10"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<SolidColorBrush Color="{StaticResource SmilePink}"/>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ToolTip">
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock TextWrapping="Wrap" Width="200" Text="{Binding}"/>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="HelpButton" TargetType="Button">
		<Setter Property="Background" Value="DeepPink"/>
		<Setter Property="Foreground" Value="DarkSlateGray"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Content" Value="?"/>
		<Setter Property="FontFamily" Value="Arial"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="FontWeight" Value="UltraBold"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Width" Value="40"/>
		<Setter Property="Margin" Value="4,0,4,0"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Cursor="Hand" x:Name="grid" RenderTransformOrigin="0.5,0.5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.15*"/>
							<ColumnDefinition Width="0.7*"/>
							<ColumnDefinition Width="0.15*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.05*"/>
							<RowDefinition Height="0.4*"/>
							<RowDefinition Height="0.55*"/>
						</Grid.RowDefinitions>
						<Ellipse x:Name="OuterEllipse" Grid.RowSpan="3" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Grid.ColumnSpan="3"/>
						<Ellipse x:Name="BackgroundEllipse" Grid.RowSpan="3" Grid.ColumnSpan="3">
							<Ellipse.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="White"/>
									<GradientStop Color="HotPink" Offset="1"/>
									<GradientStop Color="DeepPink" Offset="0.5"/>
									<!-- this is a key color -->
								</LinearGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
						<Ellipse Grid.RowSpan="3" Grid.ColumnSpan="3">
							<Ellipse.Fill>
								<RadialGradientBrush>
									<GradientStop Color="DeepPink" Offset="1"/>
									<!-- this is a key color -->
									<GradientStop Color="HotPink" Offset="0"/>
								</RadialGradientBrush>
							</Ellipse.Fill>
						</Ellipse>

						<ContentPresenter HorizontalAlignment="Center" x:Name="contentPresenter" VerticalAlignment="Center" 
											  Grid.Column="1" Grid.Row="1" Grid.RowSpan="3"/>
						<Ellipse HorizontalAlignment="Stretch" x:Name="ReflectiveSurface" VerticalAlignment="Stretch" Opacity="1" Grid.Column="1" Grid.Row="1">
							<Ellipse.Fill>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#BBFFFFFF"/>
									<GradientStop Color="#00FFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>